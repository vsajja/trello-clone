"use strict";angular.module("trelloCloneApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","restangular","smart-table","dndLists"]).config(["$routeProvider","$locationProvider","$compileProvider","RestangularProvider",function(a,b,c,d){a.when("/",{templateUrl:"views/boards.html",controller:"BoardsCtrl",controllerAs:"boards"}).when("/main",{}).when("/board/:boardId",{templateUrl:"views/board.html",controller:"BoardCtrl",controllerAs:"board"}).otherwise({redirectTo:"/"}),b.html5Mode(!1),b.hashPrefix(""),d.setDefaultHeaders({"Content-Type":"application/json"}),c.debugInfoEnabled(!1),d.setBaseUrl("/api/v1")}]),angular.module("trelloCloneApp").controller("MainCtrl",["$scope","$location",function(a,b){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.login=function(){a.user.username===a.user.password?b.path("/boards"):window.alert("Invalid credentials! Username must match password!")}}]),angular.module("trelloCloneApp").controller("BoardsCtrl",["$scope","Restangular",function(a,b){function c(){a.getBoards()}this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"];var d=b.all("boards");a.getBoards=function(){d.getList().then(function(b){a.boards=b,a.boardCollection=[].concat(a.boards)})},a.deleteBoard=function(b){d.customDELETE(b).then(function(){a.getBoards()})},a.createBoard=function(){d.customPOST(a.newBoard).then(function(){a.newBoard=null,a.getBoards()},function(){window.alert("Unable to create board, name must be unique.")})},c()}]),angular.module("trelloCloneApp").controller("BoardCtrl",["$scope","$routeParams","Restangular",function(a,b,c){function d(){a.getBoard(),a.getBoardLists()}this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"];var e=b.boardId,f=c.one("boards",e);a.getBoard=function(){f.customGET().then(function(b){a.board=b})},a.getBoardLists=function(){f.customGET("lists").then(function(b){a.boardLists=b})},a.deleteBoardList=function(b){var c=f.all("lists",b);c.customDELETE(b).then(function(){a.getBoardLists()})},a.createBoardList=function(){f.post("lists",a.newBoardList).then(function(){a.getBoardLists()},function(){window.alert("Unable to create board list.")})},a.createCard=function(){console.log("create card for list")},d(),a.updateLists=function(){a.modelAsJson=angular.toJson(a.boardLists.lists,!0),f.one("lists").customPUT(a.modelAsJson).then(function(){},function(){window.alert("Unable to create board list.")})}}]),angular.module("trelloCloneApp").run(["$templateCache",function(a){a.put("views/board.html",'<h4><strong>{{board.name}}</strong></h4> <div class="boardList row"> <div class="col-md-12"> <div class="row"> <div ng-repeat="(listId, list) in boardLists.lists" class="col-md-3"> <div class="panel panel-info"> <div class="panel-heading"><i ng-click="deleteBoardList(listId)" class="fa fa-trash" aria-hidden="true" style="float: right"></i> <h3 class="panel-title">{{list.details.name}}</h3> </div> <div class="panel-body"> <!-- The dnd-list directive allows to drop elements into it.\nThe dropped data will be added to the referenced list --> <ul dnd-list="list.cards"> <!-- The dnd-draggable directive makes an element draggable and will\n                   transfer the object that was assigned to it. If an element was\n                   dragged away, you have to remove it from the original list\n                   yourself using the dnd-moved attribute --> <li ng-repeat="card in list.cards" dnd-draggable="card" dnd-moved="list.cards.splice($index, 1);updateLists()" dnd-effect-allowed="move" dnd-selected="boardLists.selected = card" ng-class="{\'selected\': boardLists.selected === card}"> {{card.name}} </li> </ul> </div> </div> </div> </div> </div> </div> <div> <button type="button" class="btn btn-success" data-toggle="modal" data-target=".bs-create-list-modal-sm">Create List </button> </div> <div class="modal fade bs-create-list-modal-sm" role="dialog"> <div class="modal-dialog modal-sm" role="document"> <div class="modal-content" style="padding: 5px"> <!-- FORM --> <form ng-submit="createBoardList()"> <!-- NAME --> <div class="form-group"> <label>Name</label> <input type="text" name="name" class="form-control" placeholder="List name.." - ng-model="newBoardList.name" - required> <span class="help-block"></span> </div> <!-- SUBMIT BUTTON --> <button type="submit" class="btn btn-success btn-block"> Create </button> <!--<br/>--> <!--<textarea style="height:125px; resize: none;" cols="30" rows="10" name="description"--> <!--class="form-control">{{ newBoardList }}</textarea>--> </form> </div> </div> </div>'),a.put("views/boards.html",'<table st-table="boardCollection" st-safe-src="boards" class="table table-striped"> <tr> <th colspan="10"><input st-search="" class="form-control" placeholder="Search boards..." type="text"></th> </tr> <tbody> <tr ng-repeat="board in boardCollection"> <td style="width: 200px; height: 100px; padding: 15px"> <div class="card-block"> <h4 class="card-title"> <a ng-href="#/board/{{board.boardId}}">{{board.name}}</a> <i ng-click="deleteBoard(board.boardId)" class="fa fa-trash" aria-hidden="true" style="float: right"></i> </h4> </div> </td> </tr> </tbody> <tfoot> <tr> <td class="text-center" st-pagination="" st-items-by-page="30" colspan="10"> </td> </tr> </tfoot> </table> <div> <button type="button" class="btn btn-success" data-toggle="modal" data-target=".bs-create-board-modal-sm">Create Board </button> </div> <div class="modal fade bs-create-board-modal-sm" role="dialog"> <div class="modal-dialog modal-sm" role="document"> <div class="modal-content" style="padding: 5px"> <!-- FORM --> <form ng-submit="createBoard()"> <!-- NAME --> <div class="form-group"> <label>Name</label> <input type="text" name="name" class="form-control" placeholder="Board name.." ng-model="newBoard.name" required> <span class="help-block"></span> </div> <!-- SUBMIT BUTTON --> <button type="submit" class="btn btn-success btn-block"> Create </button> <!--<br/>--> <!--<textarea style="height:125px; resize: none;" cols="30" rows="10" name="description"--> <!--class="form-control">{{ newBoard }}</textarea>--> </form> </div> </div> </div>'),a.put("views/main.html",'<div class="row"> <div class="col-sm-12" style="text-align: center"> <h2>Welcome to the <span style="color: gray"><i class="fa fa-trello fa-1x" aria-hidden="true"></i> <strong>Trello-clone</strong></span> project!</h2> <br> <br> <br> <br> <div> <div class="col-sm-4"> </div> <div class="col-sm-4"> <div class="panel panel-default" style="text-align: left"> <div class="panel-heading"> <h4>Login</h4> </div> <div class="panel-body"> <div class="box box-info"> <div class="box-body"> <!-- FORM --> <form ng-submit="login()"> <!-- USERNAME --> <div class="form-group"> <label>Username</label> <input type="text" name="username" class="form-control" placeholder="Username" ng-model="user.username" required> <span class="help-block"></span> </div> <!-- PASSWORD --> <div class="form-group"> <label>Password</label> <input type="password" name="password" class="form-control" placeholder="Password" ng-model="user.password" required> <span class="help-block"></span> </div> <!-- SUBMIT BUTTON --> <button type="submit" class="btn btn-success btn-lg btn-block"> Login </button> </form> <!--<br/>--> <!--<textarea style="height:125px; resize: none;" cols="30" rows="10" name="description"--> <!--class="form-control">{{ user }}</textarea>--> </div> </div> </div> </div> </div> <div class="col-sm-4"> </div> </div> </div> </div>')}]);