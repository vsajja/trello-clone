/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.generated.tables.BoardList;
import jooq.generated.tables.records.BoardListRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BoardListDao extends DAOImpl<BoardListRecord, jooq.generated.tables.pojos.BoardList, Integer> {

	/**
	 * Create a new BoardListDao without any configuration
	 */
	public BoardListDao() {
		super(BoardList.BOARD_LIST, jooq.generated.tables.pojos.BoardList.class);
	}

	/**
	 * Create a new BoardListDao with an attached configuration
	 */
	public BoardListDao(Configuration configuration) {
		super(BoardList.BOARD_LIST, jooq.generated.tables.pojos.BoardList.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(jooq.generated.tables.pojos.BoardList object) {
		return object.getBoardListId();
	}

	/**
	 * Fetch records that have <code>board_list_id IN (values)</code>
	 */
	public List<jooq.generated.tables.pojos.BoardList> fetchByBoardListId(Integer... values) {
		return fetch(BoardList.BOARD_LIST.BOARD_LIST_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>board_list_id = value</code>
	 */
	public jooq.generated.tables.pojos.BoardList fetchOneByBoardListId(Integer value) {
		return fetchOne(BoardList.BOARD_LIST.BOARD_LIST_ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<jooq.generated.tables.pojos.BoardList> fetchByName(String... values) {
		return fetch(BoardList.BOARD_LIST.NAME, values);
	}

	/**
	 * Fetch records that have <code>board_id IN (values)</code>
	 */
	public List<jooq.generated.tables.pojos.BoardList> fetchByBoardId(Integer... values) {
		return fetch(BoardList.BOARD_LIST.BOARD_ID, values);
	}
}
