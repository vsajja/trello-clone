/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.generated.tables.TeamMember;
import jooq.generated.tables.records.TeamMemberRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamMemberDao extends DAOImpl<TeamMemberRecord, jooq.generated.tables.pojos.TeamMember, Integer> {

	/**
	 * Create a new TeamMemberDao without any configuration
	 */
	public TeamMemberDao() {
		super(TeamMember.TEAM_MEMBER, jooq.generated.tables.pojos.TeamMember.class);
	}

	/**
	 * Create a new TeamMemberDao with an attached configuration
	 */
	public TeamMemberDao(Configuration configuration) {
		super(TeamMember.TEAM_MEMBER, jooq.generated.tables.pojos.TeamMember.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(jooq.generated.tables.pojos.TeamMember object) {
		return object.getTeamMemberId();
	}

	/**
	 * Fetch records that have <code>team_member_id IN (values)</code>
	 */
	public List<jooq.generated.tables.pojos.TeamMember> fetchByTeamMemberId(Integer... values) {
		return fetch(TeamMember.TEAM_MEMBER.TEAM_MEMBER_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>team_member_id = value</code>
	 */
	public jooq.generated.tables.pojos.TeamMember fetchOneByTeamMemberId(Integer value) {
		return fetchOne(TeamMember.TEAM_MEMBER.TEAM_MEMBER_ID, value);
	}

	/**
	 * Fetch records that have <code>team_id IN (values)</code>
	 */
	public List<jooq.generated.tables.pojos.TeamMember> fetchByTeamId(Integer... values) {
		return fetch(TeamMember.TEAM_MEMBER.TEAM_ID, values);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<jooq.generated.tables.pojos.TeamMember> fetchByUserId(Integer... values) {
		return fetch(TeamMember.TEAM_MEMBER.USER_ID, values);
	}
}
