/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.BoardListRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BoardList extends TableImpl<BoardListRecord> {

	private static final long serialVersionUID = -731967876;

	/**
	 * The reference instance of <code>public.board_list</code>
	 */
	public static final BoardList BOARD_LIST = new BoardList();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BoardListRecord> getRecordType() {
		return BoardListRecord.class;
	}

	/**
	 * The column <code>public.board_list.board_list_id</code>.
	 */
	public final TableField<BoardListRecord, Integer> BOARD_LIST_ID = createField("board_list_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.board_list.name</code>.
	 */
	public final TableField<BoardListRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.board_list.board_id</code>.
	 */
	public final TableField<BoardListRecord, Integer> BOARD_ID = createField("board_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.board_list</code> table reference
	 */
	public BoardList() {
		this("board_list", null);
	}

	/**
	 * Create an aliased <code>public.board_list</code> table reference
	 */
	public BoardList(String alias) {
		this(alias, BOARD_LIST);
	}

	private BoardList(String alias, Table<BoardListRecord> aliased) {
		this(alias, aliased, null);
	}

	private BoardList(String alias, Table<BoardListRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BoardListRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BOARD_LIST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BoardListRecord> getPrimaryKey() {
		return Keys.BOARD_LIST_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BoardListRecord>> getKeys() {
		return Arrays.<UniqueKey<BoardListRecord>>asList(Keys.BOARD_LIST_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BoardListRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BoardListRecord, ?>>asList(Keys.BOARD_LIST__BOARD_LIST_BOARD_BOARD_ID_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BoardList as(String alias) {
		return new BoardList(alias, this);
	}

	/**
	 * Rename this table
	 */
	public BoardList rename(String name) {
		return new BoardList(name, null);
	}
}
