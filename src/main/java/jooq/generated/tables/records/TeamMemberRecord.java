/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.records;


import javax.annotation.Generated;

import jooq.generated.tables.TeamMember;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamMemberRecord extends UpdatableRecordImpl<TeamMemberRecord> implements Record3<Integer, Integer, Integer> {

	private static final long serialVersionUID = 1754411050;

	/**
	 * Setter for <code>public.team_member.team_member_id</code>.
	 */
	public TeamMemberRecord setTeamMemberId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.team_member.team_member_id</code>.
	 */
	public Integer getTeamMemberId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.team_member.team_id</code>.
	 */
	public TeamMemberRecord setTeamId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.team_member.team_id</code>.
	 */
	public Integer getTeamId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.team_member.user_id</code>.
	 */
	public TeamMemberRecord setUserId(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.team_member.user_id</code>.
	 */
	public Integer getUserId() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return TeamMember.TEAM_MEMBER.TEAM_MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return TeamMember.TEAM_MEMBER.TEAM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return TeamMember.TEAM_MEMBER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getTeamMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTeamId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamMemberRecord value1(Integer value) {
		setTeamMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamMemberRecord value2(Integer value) {
		setTeamId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamMemberRecord value3(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeamMemberRecord values(Integer value1, Integer value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TeamMemberRecord
	 */
	public TeamMemberRecord() {
		super(TeamMember.TEAM_MEMBER);
	}

	/**
	 * Create a detached, initialised TeamMemberRecord
	 */
	public TeamMemberRecord(Integer teamMemberId, Integer teamId, Integer userId) {
		super(TeamMember.TEAM_MEMBER);

		setValue(0, teamMemberId);
		setValue(1, teamId);
		setValue(2, userId);
	}
}
