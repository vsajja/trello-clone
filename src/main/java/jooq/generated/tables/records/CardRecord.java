/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.records;


import javax.annotation.Generated;

import jooq.generated.tables.Card;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardRecord extends UpdatableRecordImpl<CardRecord> implements Record4<Integer, String, String, Integer> {

	private static final long serialVersionUID = 709537740;

	/**
	 * Setter for <code>public.card.card_id</code>.
	 */
	public CardRecord setCardId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.card.card_id</code>.
	 */
	public Integer getCardId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.card.name</code>.
	 */
	public CardRecord setName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.card.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.card.description</code>.
	 */
	public CardRecord setDescription(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.card.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.card.list_id</code>.
	 */
	public CardRecord setListId(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.card.list_id</code>.
	 */
	public Integer getListId() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Card.CARD.CARD_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Card.CARD.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Card.CARD.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Card.CARD.LIST_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getCardId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getListId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CardRecord value1(Integer value) {
		setCardId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CardRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CardRecord value3(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CardRecord value4(Integer value) {
		setListId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CardRecord values(Integer value1, String value2, String value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CardRecord
	 */
	public CardRecord() {
		super(Card.CARD);
	}

	/**
	 * Create a detached, initialised CardRecord
	 */
	public CardRecord(Integer cardId, String name, String description, Integer listId) {
		super(Card.CARD);

		setValue(0, cardId);
		setValue(1, name);
		setValue(2, description);
		setValue(3, listId);
	}
}
