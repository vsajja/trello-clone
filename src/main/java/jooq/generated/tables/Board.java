/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.BoardRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Board extends TableImpl<BoardRecord> {

	private static final long serialVersionUID = 606403524;

	/**
	 * The reference instance of <code>public.board</code>
	 */
	public static final Board BOARD = new Board();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BoardRecord> getRecordType() {
		return BoardRecord.class;
	}

	/**
	 * The column <code>public.board.board_id</code>.
	 */
	public final TableField<BoardRecord, Integer> BOARD_ID = createField("board_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.board.name</code>.
	 */
	public final TableField<BoardRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>public.board</code> table reference
	 */
	public Board() {
		this("board", null);
	}

	/**
	 * Create an aliased <code>public.board</code> table reference
	 */
	public Board(String alias) {
		this(alias, BOARD);
	}

	private Board(String alias, Table<BoardRecord> aliased) {
		this(alias, aliased, null);
	}

	private Board(String alias, Table<BoardRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BoardRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BOARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BoardRecord> getPrimaryKey() {
		return Keys.BOARD_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BoardRecord>> getKeys() {
		return Arrays.<UniqueKey<BoardRecord>>asList(Keys.BOARD_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Board as(String alias) {
		return new Board(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Board rename(String name) {
		return new Board(name, null);
	}
}
